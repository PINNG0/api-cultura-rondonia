# Nome do Workflow (para identificação na aba Actions)
name: Raspar Eventos Culturais 

# Gatilhos: Quando rodar?
on:
  # Agendado: Todo dia às 3h UTC (0h em Rondônia)
  schedule:
    - cron: '0 3 * * *' 
  # Manual: Permite rodar a qualquer momento pelo botão "Run workflow"
  workflow_dispatch:

# Permissões: O que o robô pode fazer?
permissions:
  contents: write # Necessário para fazer commit/push do eventos.json

# Tarefas: O que fazer?
jobs:
  scrape: # Nome da tarefa
    runs-on: ubuntu-latest # Rodar em um servidor Linux do GitHub

    steps: # Passos sequenciais
      # 1. Baixa o código do seu repositório (scraper.py)
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configura o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' 

      # 3. Instala as bibliotecas Python necessárias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      # 4. Executa o script scraper.py para gerar eventos.json
      - name: Run scraper
        run: python scraper.py

      # 5. Faz commit e push do eventos.json APENAS se ele tiver mudado
      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]' 
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add eventos.json 
          # Comando chave: só faz commit se houver diferença
          git diff --staged --quiet || git commit -m "Atualiza eventos culturais via Action"
          git push